{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_task1\\\\task1\\\\src\\\\component\\\\todo\\\\Todo.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Todo.css\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleAddTask = () => {\n    if (newTask.trim() === \"\") return;\n    setTasks([...tasks, {\n      text: newTask,\n      completed: false\n    }]);\n    setNewTask(\"\"); // Clear input\n  };\n  const handleToggleCompleted = index => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  const navclose = useNavigate();\n  const handleClose = () => {\n    navclose('/Nav');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-btn\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClose,\n        children: \"X\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-app\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"To-Do List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter a task\",\n          value: newTask,\n          onChange: e => setNewTask(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleAddTask,\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"task-list\",\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          className: task.completed ? \"completed\" : \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: task.completed,\n            onChange: () => handleToggleCompleted(index)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteTask(index),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Todo, \"CF2uACaLkQ+siwokTX24JgHB5HI=\", false, function () {\n  return [useNavigate];\n});\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","Todo","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","text","completed","handleToggleCompleted","index","updatedTasks","map","task","i","handleDeleteTask","filter","_","navclose","handleClose","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","checked","_c","$RefreshReg$"],"sources":["D:/react_task1/task1/src/component/todo/Todo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Todo.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst Todo = () => {\r\n  const [tasks, setTasks] = useState([]); \r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() === \"\") return; \r\n    setTasks([...tasks, { text: newTask, completed: false }]); \r\n    setNewTask(\"\"); // Clear input\r\n  };\r\n\r\n  const handleToggleCompleted = (index) => {\r\n    const updatedTasks = tasks.map((task, i) =>\r\n      i === index ? { ...task, completed: !task.completed } : task\r\n    );\r\n    setTasks(updatedTasks); \r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index); \r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  const navclose=useNavigate();\r\n  const handleClose=()=>{\r\n    navclose('/Nav')\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"close-btn\"><button onClick={handleClose}>X</button></div>\r\n      <div className=\"todo-app\">\r\n      <h1>To-Do List</h1>\r\n      <div className=\"input-section\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter a task\"\r\n          value={newTask}\r\n          onChange={(e) => setNewTask(e.target.value)}\r\n        />\r\n        <button onClick={handleAddTask}>Add Task</button>\r\n      </div>\r\n      <ul className=\"task-list\">\r\n        {tasks.map((task, index) => (\r\n          <li key={index} className={task.completed ? \"completed\" : \"\"}>\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={task.completed}\r\n              onChange={() => handleToggleCompleted(index)}\r\n            />\r\n            <span>{task.text}</span>\r\n            <button onClick={() => handleDeleteTask(index)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}