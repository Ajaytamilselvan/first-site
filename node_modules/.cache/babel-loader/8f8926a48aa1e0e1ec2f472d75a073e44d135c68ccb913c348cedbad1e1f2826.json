{"ast":null,"code":"var _jsxFileName = \"D:\\\\react_task1\\\\task1\\\\src\\\\component\\\\xogame\\\\Xogame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Xogame.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Xogame = () => {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null)); // Game board\n  const [isXTurn, setIsXTurn] = useState(true); // Track whose turn it is\n  const winner = calculateWinner(board); // Check for a winner\n\n  const handleClick = index => {\n    if (board[index] || winner) return; // Ignore clicks on filled or finished boards\n\n    const newBoard = [...board];\n    newBoard[index] = isXTurn ? \"X\" : \"O\"; // Set X or O\n    setBoard(newBoard);\n    setIsXTurn(!isXTurn); // Switch turn\n  };\n  const resetGame = () => {\n    setBoard(Array(9).fill(null));\n    setIsXTurn(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tic Tac Toe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), winner ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Winner: \", winner]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"Next Player: \", isXTurn ? \"X\" : \"O\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 45\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((value, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"square\",\n        onClick: () => handleClick(index),\n        children: value\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset\",\n      onClick: resetGame,\n      children: \"Restart Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n// Helper function to calculate the winner\n_s(Xogame, \"Acc9fC8T4ioYYKpLI0v/reteE/g=\");\n_c = Xogame;\nconst calculateWinner = squares => {\n  const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let [a, b, c] of winningCombinations) {\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\nexport default Xogame;\nvar _c;\n$RefreshReg$(_c, \"Xogame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Xogame","_s","board","setBoard","Array","fill","isXTurn","setIsXTurn","winner","calculateWinner","handleClick","index","newBoard","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","value","onClick","_c","squares","winningCombinations","a","b","c","$RefreshReg$"],"sources":["D:/react_task1/task1/src/component/xogame/Xogame.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Xogame.css\";\r\n\r\nconst Xogame = () => {\r\n\r\n  const [board, setBoard] = useState(Array(9).fill(null)); // Game board\r\n  const [isXTurn, setIsXTurn] = useState(true); // Track whose turn it is\r\n  const winner = calculateWinner(board); // Check for a winner\r\n\r\n  const handleClick = (index) => {\r\n    if (board[index] || winner) return; // Ignore clicks on filled or finished boards\r\n\r\n    const newBoard = [...board];\r\n    newBoard[index] = isXTurn ? \"X\" : \"O\"; // Set X or O\r\n    setBoard(newBoard);\r\n    setIsXTurn(!isXTurn); // Switch turn\r\n  };\r\n\r\n  const resetGame = () => {\r\n    setBoard(Array(9).fill(null));\r\n    setIsXTurn(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game\">\r\n      <h1>Tic Tac Toe</h1>\r\n      {winner ? <h2>Winner: {winner}</h2> : <h2>Next Player: {isXTurn ? \"X\" : \"O\"}</h2>}\r\n      <div className=\"board\">\r\n        {board.map((value, index) => (\r\n          <button key={index} className=\"square\" onClick={() => handleClick(index)}>\r\n            {value}\r\n          </button>\r\n        ))}\r\n      </div>\r\n      <button className=\"reset\" onClick={resetGame}>\r\n        Restart Game\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Helper function to calculate the winner\r\nconst calculateWinner = (squares) => {\r\n  const winningCombinations = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n\r\n  for (let [a, b, c] of winningCombinations) {\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default Xogame;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}