{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./Todo.css\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Todo = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [newTask, setNewTask] = useState(\"\");\n  const handleAddTask = () => {\n    if (newTask.trim() === \"\") return;\n    setTasks([...tasks, {\n      text: newTask,\n      completed: false\n    }]);\n    setNewTask(\"\"); // Clear input\n  };\n  const handleToggleCompleted = index => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  const handleDeleteTask = index => {\n    const updatedTasks = tasks.filter((_, i) => i !== index);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Todo, \"bioIcagx8AA9h6inwgA0NezF4sg=\");\n_c = Todo;\nexport default Todo;\nvar _c;\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Todo","_s","tasks","setTasks","newTask","setNewTask","handleAddTask","trim","text","completed","handleToggleCompleted","index","updatedTasks","map","task","i","handleDeleteTask","filter","_","_c","$RefreshReg$"],"sources":["D:/react_task1/task1/src/component/todo/Todo.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Todo.css\";\r\n\r\nconst Todo = () => {\r\n  const [tasks, setTasks] = useState([]); \r\n  const [newTask, setNewTask] = useState(\"\");\r\n\r\n  const handleAddTask = () => {\r\n    if (newTask.trim() === \"\") return; \r\n    setTasks([...tasks, { text: newTask, completed: false }]); \r\n    setNewTask(\"\"); // Clear input\r\n  };\r\n\r\n  const handleToggleCompleted = (index) => {\r\n    const updatedTasks = tasks.map((task, i) =>\r\n      i === index ? { ...task, completed: !task.completed } : task\r\n    );\r\n    setTasks(updatedTasks); \r\n  };\r\n\r\n  const handleDeleteTask = (index) => {\r\n    const updatedTasks = tasks.filter((_, i) => i !== index); \r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,YAAY;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAIF,OAAO,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAC3BJ,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE;MAAEM,IAAI,EAAEJ,OAAO;MAAEK,SAAS,EAAE;IAAM,CAAC,CAAC,CAAC;IACzDJ,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC;EAED,MAAMK,qBAAqB,GAAIC,KAAK,IAAK;IACvC,MAAMC,YAAY,GAAGV,KAAK,CAACW,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACrCA,CAAC,KAAKJ,KAAK,GAAG;MAAE,GAAGG,IAAI;MAAEL,SAAS,EAAE,CAACK,IAAI,CAACL;IAAU,CAAC,GAAGK,IAC1D,CAAC;IACDX,QAAQ,CAACS,YAAY,CAAC;EACxB,CAAC;EAED,MAAMI,gBAAgB,GAAIL,KAAK,IAAK;IAClC,MAAMC,YAAY,GAAGV,KAAK,CAACe,MAAM,CAAC,CAACC,CAAC,EAAEH,CAAC,KAAKA,CAAC,KAAKJ,KAAK,CAAC;IACxDR,QAAQ,CAACS,YAAY,CAAC;EACxB,CAAC;EAED,oBACEb,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEP,CAAC;AAACI,EAAA,CA3BID,IAAI;AAAAmB,EAAA,GAAJnB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}